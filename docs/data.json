{
    "project": {
        "name": "pngjs-image",
        "description": "Native PNG image manipulation",
        "version": "0.11.1"
    },
    "files": {
        "lib/filters/blur.js": {
            "name": "lib/filters/blur.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/filters/grayScale.js": {
            "name": "lib/filters/grayScale.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/filters/lightness.js": {
            "name": "lib/filters/lightness.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/filters/luma.js": {
            "name": "lib/filters/luma.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/filters/luminosity.js": {
            "name": "lib/filters/luminosity.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/filters/sepia.js": {
            "name": "lib/filters/sepia.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/IDAT.js": {
            "name": "lib/png/chunks/IDAT.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/IEND.js": {
            "name": "lib/png/chunks/IEND.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/IHDR.js": {
            "name": "lib/png/chunks/IHDR.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/PLTE.js": {
            "name": "lib/png/chunks/PLTE.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/bKGD.js": {
            "name": "lib/png/chunks/bKGD.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/cHRM.js": {
            "name": "lib/png/chunks/cHRM.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/gAMA.js": {
            "name": "lib/png/chunks/gAMA.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/hIST.js": {
            "name": "lib/png/chunks/hIST.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/iCCP.js": {
            "name": "lib/png/chunks/iCCP.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/iTXt.js": {
            "name": "lib/png/chunks/iTXt.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/pHYs.js": {
            "name": "lib/png/chunks/pHYs.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/sBIT.js": {
            "name": "lib/png/chunks/sBIT.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/sPLT.js": {
            "name": "lib/png/chunks/sPLT.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/sRGB.js": {
            "name": "lib/png/chunks/sRGB.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/tEXt.js": {
            "name": "lib/png/chunks/tEXt.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/tIME.js": {
            "name": "lib/png/chunks/tIME.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/tRNS.js": {
            "name": "lib/png/chunks/tRNS.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunks/zTXt.js": {
            "name": "lib/png/chunks/zTXt.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/chunk.js": {
            "name": "lib/png/chunk.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/decoder.js": {
            "name": "lib/png/decoder.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/png/encoder.js": {
            "name": "lib/png/encoder.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/conversion.js": {
            "name": "lib/conversion.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/filters.js": {
            "name": "lib/filters.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/modify.js": {
            "name": "lib/modify.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/pixel.js": {
            "name": "lib/pixel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "index.js": {
            "name": "index.js",
            "modules": {},
            "classes": {
                "PNGImage": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "PNGImage": {
            "name": "PNGImage",
            "shortname": "PNGImage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "index.js",
            "line": 16,
            "description": "PNGjs-image class",
            "type": "{object}",
            "params": [
                {
                    "name": "image",
                    "description": "png-js object",
                    "type": "PNG"
                }
            ],
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "lib/filters/blur.js",
            "line": 4,
            "description": "Blur filter",
            "itemtype": "method",
            "name": "blur-filter",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "destination",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "funcName",
                            "description": "",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/filters/grayScale.js",
            "line": 4,
            "description": "Gray-scale filter",
            "itemtype": "method",
            "name": "gray-scale filter",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "destination",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/filters/lightness.js",
            "line": 4,
            "description": "Lightness filter",
            "itemtype": "method",
            "name": "lightness filter",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "destination",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/filters/luma.js",
            "line": 4,
            "description": "Luma filter",
            "itemtype": "method",
            "name": "luma filter",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "destination",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/filters/luminosity.js",
            "line": 4,
            "description": "Luminosity filter",
            "itemtype": "method",
            "name": "luminosity filter",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "destination",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/filters/sepia.js",
            "line": 4,
            "description": "Sepia filter",
            "itemtype": "method",
            "name": "sepia filter",
            "params": [
                {
                    "name": "source",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "destination",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IDAT.js",
            "line": 5,
            "description": "Makes sure that all required information is available before parsing",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IDAT.js",
            "line": 21,
            "description": "Decoding of chunk data",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should parsing be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IEND.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 7,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 27,
            "description": "Decoding of chunk data",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 48,
            "description": "Validates all decoded data",
            "itemtype": "method",
            "name": "postDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 117,
            "description": "Gets the width of the image",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 127,
            "description": "Gets the height of the image",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 138,
            "description": "Gets the bit-depth of the image data",
            "itemtype": "method",
            "name": "getBitDepth",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 148,
            "description": "Gets the color-type of the image data",
            "itemtype": "method",
            "name": "getColorType",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 158,
            "description": "Gets the compression method of the image data",
            "itemtype": "method",
            "name": "getCompressionMethod",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 168,
            "description": "Gets the filter method of the image data",
            "itemtype": "method",
            "name": "getFilterMethod",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 178,
            "description": "Gets the interlace method of the image data",
            "itemtype": "method",
            "name": "getInterlaceMethod",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 189,
            "description": "Does image have a color palette?",
            "itemtype": "method",
            "name": "hasPalette",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 199,
            "description": "Is image in color?",
            "itemtype": "method",
            "name": "isColor",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 209,
            "description": "Does image have an alpha-chanel?",
            "itemtype": "method",
            "name": "hasAlphaChannel",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 220,
            "description": "Determines bytes per pixel",
            "itemtype": "method",
            "name": "getBytesPerPixel",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 231,
            "description": "Gets the number of samples for the color-type",
            "itemtype": "method",
            "name": "getSamples",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 241,
            "description": "Gets the sample-depth for the color-type",
            "itemtype": "method",
            "name": "getSampleDepth",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 251,
            "description": "Determines the scan-line length",
            "itemtype": "method",
            "name": "getScanLineLength",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 261,
            "description": "Gets the size of the image in bytes during edit-mode",
            "itemtype": "method",
            "name": "getImageSizeInBytes",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 271,
            "description": "Gets the number of bytes in a pixel for images in edit-mode",
            "itemtype": "method",
            "name": "getImageBytesPerPixel",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 282,
            "description": "Is the image of color-type \"Grayscale\"?",
            "itemtype": "method",
            "name": "isColorTypeGreyScale",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 292,
            "description": "Is the image of color-type \"True-color\"?",
            "itemtype": "method",
            "name": "isColorTypeTrueColor",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 302,
            "description": "Is the image of color-type \"Indexed-color\"?",
            "itemtype": "method",
            "name": "isColorTypeIndexedColor",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 312,
            "description": "Is the image of color-type \"Grayscale with alpha channel\"?",
            "itemtype": "method",
            "name": "isColorTypeGreyScaleWithAlpha",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/IHDR.js",
            "line": 322,
            "description": "Is the image of color-type \"True-color with alpha channel\"?",
            "itemtype": "method",
            "name": "isColorTypeTrueColorWithAlpha",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/PLTE.js",
            "line": 5,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/PLTE.js",
            "line": 44,
            "description": "Decoding of chunk data",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should parsing be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/PLTE.js",
            "line": 59,
            "description": "Gets the color at",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "R: *, g: *, b: *"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/PLTE.js",
            "line": 80,
            "description": "Converts the input data to an image",
            "params": [
                {
                    "name": "input",
                    "description": "Input data",
                    "type": "Buffer"
                },
                {
                    "name": "inputOffset",
                    "description": "Offset in input data",
                    "type": "Int"
                },
                {
                    "name": "image",
                    "description": "Image data",
                    "type": "Buffer"
                },
                {
                    "name": "imageOffset",
                    "description": "Offset in image data",
                    "type": "Int"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/bKGD.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/cHRM.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/gAMA.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/hIST.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/iCCP.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/iTXt.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/pHYs.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/sBIT.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/sPLT.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/sRGB.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/tEXt.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/tIME.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/tRNS.js",
            "line": 7,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/tRNS.js",
            "line": 36,
            "description": "Decoding of chunk data",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should parsing be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/tRNS.js",
            "line": 79,
            "description": "Get all colors",
            "return": {
                "description": "",
                "type": "Array|*"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/tRNS.js",
            "line": 88,
            "description": "Processes image data after reading",
            "itemtype": "method",
            "name": "processInput",
            "params": [
                {
                    "name": "image",
                    "description": "Image data",
                    "type": "Buffer"
                },
                {
                    "name": "imageOffset",
                    "description": "Offset in image data",
                    "type": "Int"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunks/zTXt.js",
            "line": 3,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preDecode",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunk.js",
            "line": 12,
            "description": "Defines chunk to be known/unknown",
            "itemtype": "method",
            "name": "isUnknown",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunk.js",
            "line": 67,
            "description": "Makes sure that all required information is available before decoding",
            "itemtype": "method",
            "name": "preParse",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunk.js",
            "line": 80,
            "description": "Decoding of chunk data",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/chunk.js",
            "line": 93,
            "description": "Validates all decoded data",
            "itemtype": "method",
            "name": "postParse",
            "params": [
                {
                    "name": "data",
                    "description": "Chunk data",
                    "type": "Buffer"
                },
                {
                    "name": "offset",
                    "description": "Offset in chunk data",
                    "type": "Int"
                },
                {
                    "name": "length",
                    "description": "Length of chunk data",
                    "type": "Int"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/decoder.js",
            "line": 21,
            "description": "Decodes the supplied data",
            "itemtype": "method",
            "name": "decode",
            "params": [
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/decoder.js",
            "line": 113,
            "description": "Reads the next chunk in the data",
            "itemtype": "method",
            "name": "decodeChunk",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "Chunk read",
                "type": "Chunk"
            },
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/png/decoder.js",
            "line": 168,
            "description": "Add a new decoded chunk to the chunk-list",
            "itemtype": "method",
            "name": "_addChunk",
            "params": [
                {
                    "name": "type",
                    "description": "Type of chunk",
                    "type": "String"
                },
                {
                    "name": "chunk",
                    "description": "Decoded chunk",
                    "type": "Chunk"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/png/decoder.js",
            "line": 208,
            "description": "Verifies the decoded data",
            "itemtype": "method",
            "name": "postDecode",
            "params": [
                {
                    "name": "strict",
                    "description": "Should decoding be strict?",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/png/encoder.js",
            "line": 23,
            "description": "Encodes the supplied data",
            "itemtype": "method",
            "name": "encode",
            "params": [
                {
                    "name": "strict",
                    "description": "Should encoding be strict?",
                    "type": "Boolean"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/png/encoder.js",
            "line": 102,
            "description": "Add a new encoded chunk to the chunk-list",
            "itemtype": "method",
            "name": "_addChunk",
            "params": [
                {
                    "name": "type",
                    "description": "Type of chunk",
                    "type": "String"
                },
                {
                    "name": "chunk",
                    "description": "Encoded chunk",
                    "type": "Chunk"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 12,
            "description": "Gets the blurred value of a pixel with a gray-scale function",
            "itemtype": "method",
            "name": "getBlurPixelAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index",
                    "type": "Int"
                },
                {
                    "name": "funcName",
                    "description": "Gray-scale function",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 76,
            "description": "Gets the blur-value of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getBlurPixel",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "funcName",
                    "description": "Gray-scale function",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "blur-value",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 91,
            "description": "Gets the YIQ-value of a pixel at a specific index\nThe values for RGB correspond afterwards to YIQ respectively.",
            "itemtype": "method",
            "name": "getYIQAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "YIQ-value",
                "type": "Object"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 119,
            "description": "Gets the YIQ-value of a pixel at a specific coordinate\nThe values for RGB correspond afterwards to YIQ respectively.",
            "itemtype": "method",
            "name": "getYIQ",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "YIQ-value",
                "type": "Object"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 134,
            "description": "Gets the luma of a pixel at a specific index",
            "itemtype": "method",
            "name": "getLumaAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "YIQ-value",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 145,
            "description": "Gets the luma of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getLuma",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "YIQ-value",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 158,
            "description": "Gets the sepia of a pixel at a specific index",
            "itemtype": "method",
            "name": "getSepiaAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Color",
                "type": "Object"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 181,
            "description": "Gets the sepia of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getSepia",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Color",
                "type": "Object"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 194,
            "description": "Gets the luminosity of a pixel at a specific index",
            "itemtype": "method",
            "name": "getLuminosityAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Luminosity",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 205,
            "description": "Gets the luminosity of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getLuminosity",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Luminosity",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 219,
            "description": "Gets the lightness of a pixel at a specific index",
            "itemtype": "method",
            "name": "getLightnessAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Lightness",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 234,
            "description": "Gets the lightness of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getLightness",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Lightness",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 248,
            "description": "Gets the average of a pixel at a specific index",
            "itemtype": "method",
            "name": "getGrayScaleAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Average",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/conversion.js",
            "line": 259,
            "description": "Gets the average of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getGrayScale",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Average",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/filters.js",
            "line": 12,
            "description": "Generates a filter function by doing common tasks to abstract this away from the actual filter functions",
            "itemtype": "method",
            "name": "generateFilter",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/filters.js",
            "line": 22,
            "description": "Creates a destination image",
            "itemtype": "method",
            "name": "",
            "params": [
                {
                    "name": "image",
                    "description": "",
                    "type": "PNGImage"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "needsCopy",
                            "description": "",
                            "type": "Object",
                            "optional": true,
                            "optdefault": "false"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/modify.js",
            "line": 12,
            "description": "Rotates the current image 90 degree counter-clockwise",
            "itemtype": "method",
            "name": "rotateCCW",
            "return": {
                "description": "Rotated image",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/modify.js",
            "line": 34,
            "description": "Rotates the current image 90 degree clockwise",
            "itemtype": "method",
            "name": "rotateCW",
            "return": {
                "description": "Rotated image",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 12,
            "description": "Gets the color of a pixel at a specific index",
            "itemtype": "method",
            "name": "getPixel",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Color",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 23,
            "description": "Gets the color of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getAt",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Color",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 36,
            "description": "Gets the color of a pixel at a specific coordinate\nAlias for getAt",
            "itemtype": "method",
            "name": "getPixel",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Color",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 50,
            "description": "Sets the color of a pixel at a specific index",
            "itemtype": "method",
            "name": "setAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "Object|int",
                    "props": [
                        {
                            "name": "red",
                            "description": "Red value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "Green value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "Blue value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "Alpha value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "Opacity of color",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 76,
            "description": "Sets the color of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "setAt",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate for pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate for pixel",
                    "type": "Int"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "Red value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "Green value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "Blue value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "Alpha value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "Opacity of color",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 94,
            "description": "Sets the color of a pixel at a specific coordinate\nAlias for setAt",
            "itemtype": "method",
            "name": "setPixel",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate for pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate for pixel",
                    "type": "Int"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "Red value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "Green value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "Blue value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "Alpha value for pixel",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "Opacity of color",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 113,
            "description": "Gets the color of a pixel at a specific index",
            "itemtype": "method",
            "name": "getColorAtIndex",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Color",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 124,
            "description": "Gets the color of a pixel at a specific coordinate",
            "itemtype": "method",
            "name": "getColor",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Color",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 138,
            "description": "Calculates the final color value for opacity",
            "itemtype": "method",
            "name": "_calculateColorValue",
            "params": [
                {
                    "name": "originalValue",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "paintValue",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "opacity",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 162,
            "description": "Get the red value of a pixel",
            "itemtype": "method",
            "name": "getRed",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 173,
            "description": "Set the red value of a pixel",
            "itemtype": "method",
            "name": "setRed",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                },
                {
                    "name": "value",
                    "description": "Value for pixel",
                    "type": "Int"
                },
                {
                    "name": "opacity",
                    "description": "Opacity of value set",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 186,
            "description": "Get the green value of a pixel",
            "itemtype": "method",
            "name": "getGreen",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 197,
            "description": "Set the green value of a pixel",
            "itemtype": "method",
            "name": "setGreen",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                },
                {
                    "name": "value",
                    "description": "Value for pixel",
                    "type": "Int"
                },
                {
                    "name": "opacity",
                    "description": "Opacity of value set",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 210,
            "description": "Get the blue value of a pixel",
            "itemtype": "method",
            "name": "getBlue",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 221,
            "description": "Set the blue value of a pixel",
            "itemtype": "method",
            "name": "setBlue",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                },
                {
                    "name": "value",
                    "description": "Value for pixel",
                    "type": "Int"
                },
                {
                    "name": "opacity",
                    "description": "Opacity of value set",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 234,
            "description": "Get the alpha value of a pixel",
            "itemtype": "method",
            "name": "getAlpha",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 245,
            "description": "Set the alpha value of a pixel",
            "itemtype": "method",
            "name": "setAlpha",
            "params": [
                {
                    "name": "idx",
                    "description": "Index of pixel",
                    "type": "Int"
                },
                {
                    "name": "value",
                    "description": "Value for pixel",
                    "type": "Int"
                },
                {
                    "name": "opacity",
                    "description": "Opacity of value set",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 258,
            "description": "Sets the value of a pixel",
            "itemtype": "method",
            "name": "_getValue",
            "params": [
                {
                    "name": "offset",
                    "description": "Offset of a value",
                    "type": "Int"
                },
                {
                    "name": "colorOffset",
                    "description": "Offset of a color",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "Int"
            },
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "lib/pixel.js",
            "line": 272,
            "description": "Sets the value of a pixel",
            "itemtype": "method",
            "name": "_setValue",
            "params": [
                {
                    "name": "offset",
                    "description": "Offset of a value",
                    "type": "Int"
                },
                {
                    "name": "colorOffset",
                    "description": "Offset of a color",
                    "type": "Int"
                },
                {
                    "name": "value",
                    "description": "Value for pixel",
                    "type": "Int"
                },
                {
                    "name": "opacity",
                    "description": "Opacity of value set",
                    "type": "Number",
                    "optional": true
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 30,
            "description": "Project version",
            "itemtype": "property",
            "name": "version",
            "static": 1,
            "type": "{string}",
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 40,
            "description": "Filter dictionary",
            "itemtype": "property",
            "name": "filters",
            "static": 1,
            "type": "{object}",
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 49,
            "description": "Sets a filter to the filter list",
            "itemtype": "method",
            "name": "setFilter",
            "params": [
                {
                    "name": "key",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 65,
            "description": "Creates an image by dimensions",
            "static": 1,
            "itemtype": "method",
            "name": "createImage",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 83,
            "description": "Copies an already existing image",
            "static": 1,
            "itemtype": "method",
            "name": "copyImage",
            "params": [
                {
                    "name": "image",
                    "description": "",
                    "type": "PNGImage"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 98,
            "description": "Reads an image from the filesystem",
            "static": 1,
            "itemtype": "method",
            "name": "readImage",
            "params": [
                {
                    "name": "filename",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 126,
            "description": "Reads an image from the filesystem synchronously",
            "static": 1,
            "itemtype": "method",
            "name": "readImageSync",
            "params": [
                {
                    "name": "filename",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 139,
            "description": "Loads an image from a blob",
            "static": 1,
            "itemtype": "method",
            "name": "loadImage",
            "params": [
                {
                    "name": "blob",
                    "description": "",
                    "type": "Buffer"
                },
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 166,
            "description": "Loads an image synchronously from a blob",
            "static": 1,
            "itemtype": "method",
            "name": "loadImageSync",
            "params": [
                {
                    "name": "blob",
                    "description": "",
                    "type": "Buffer"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 189,
            "description": "Log method that can be overwritten to modify the logging behavior",
            "static": 1,
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 202,
            "description": "Gets the original png-js object",
            "itemtype": "method",
            "name": "getImage",
            "return": {
                "description": "",
                "type": "PNG"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 212,
            "description": "Gets the image as a blob",
            "itemtype": "method",
            "name": "getBlob",
            "return": {
                "description": "",
                "type": "Buffer"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 223,
            "description": "Gets the width of the image",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 233,
            "description": "Gets the height of the image",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 244,
            "description": "Clips the current image by modifying it in-place",
            "itemtype": "method",
            "name": "clip",
            "params": [
                {
                    "name": "x",
                    "description": "Starting x-coordinate",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Starting y-coordinate",
                    "type": "Int"
                },
                {
                    "name": "width",
                    "description": "Width of area relative to starting coordinate",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "Height of area relative to starting coordinate",
                    "type": "Int"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 272,
            "description": "Fills an area with the specified color",
            "itemtype": "method",
            "name": "fillRect",
            "params": [
                {
                    "name": "x",
                    "description": "Starting x-coordinate",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Starting y-coordinate",
                    "type": "Int"
                },
                {
                    "name": "width",
                    "description": "Width of area relative to starting coordinate",
                    "type": "Int"
                },
                {
                    "name": "height",
                    "description": "Height of area relative to starting coordinate",
                    "type": "Int"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "red",
                            "description": "Red channel of color to set",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "green",
                            "description": "Green channel of color to set",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "blue",
                            "description": "Blue channel of color to set",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "alpha",
                            "description": "Alpha channel for color to set",
                            "type": "Int",
                            "optional": true
                        },
                        {
                            "name": "opacity",
                            "description": "Opacity of color",
                            "type": "Float",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 304,
            "description": "Applies a list of filters to the image",
            "itemtype": "method",
            "name": "applyFilters",
            "params": [
                {
                    "name": "filters",
                    "description": "Names of filters in sequence `{key:<string>, options:<object>}`",
                    "type": "String|object|object[]"
                },
                {
                    "name": "returnResult",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "",
                "type": "PNGImage"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 363,
            "description": "Gets index of a specific coordinate",
            "itemtype": "method",
            "name": "getIndex",
            "params": [
                {
                    "name": "x",
                    "description": "X-coordinate of pixel",
                    "type": "Int"
                },
                {
                    "name": "y",
                    "description": "Y-coordinate of pixel",
                    "type": "Int"
                }
            ],
            "return": {
                "description": "Index of pixel",
                "type": "Int"
            },
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 376,
            "description": "Writes the image to the filesystem",
            "itemtype": "method",
            "name": "writeImage",
            "params": [
                {
                    "name": "filename",
                    "description": "Path to file",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "class": "PNGImage"
        },
        {
            "file": "index.js",
            "line": 406,
            "description": "Writes the image to a buffer",
            "itemtype": "method",
            "name": "toBlob",
            "params": [
                {
                    "name": "fn",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "class": "PNGImage"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/png/chunks/PLTE.js:59"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib/png/chunks/tRNS.js:79"
        },
        {
            "message": "Missing item type\nGets the color at",
            "line": " lib/png/chunks/PLTE.js:59"
        },
        {
            "message": "Missing item type\nConverts the input data to an image",
            "line": " lib/png/chunks/PLTE.js:80"
        },
        {
            "message": "Missing item type\nGet all colors",
            "line": " lib/png/chunks/tRNS.js:79"
        }
    ]
}